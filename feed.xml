<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2019-04-22T19:26:00-07:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Parametric Kit</title>
    <link rel="alternate" href="http://blog.url.com/hcde598/2019/04/23/parametric-kit.html"/>
    <id>http://blog.url.com/hcde598/2019/04/23/parametric-kit.html</id>
    <published>2019-04-22T19:26:00-07:00</published>
    <updated>2019-04-24T11:00:30-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;It sticks together, yay &lt;i class="em em-smile"&gt;&lt;/i&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://klare.io/hcde598/documentation/rhino-grasshopper/cutout-triangles-kit.3dm"&gt;Rhino file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://klare.io/hcde598/documentation/rhino-grasshopper/cutout-triangles-kit.ai"&gt;Illustrator file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://klare.io/hcde598/documentation/rhino-grasshopper/cutout-triangles-kit.gh"&gt;Grasshopper source code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/IMG_2452.jpg" alt="Assembled" /&gt;&lt;/p&gt;

&lt;h2 id="designing-the-kit"&gt;Designing the kit&lt;/h2&gt;

&lt;p&gt;I turned to my own company, CodePen, for inspiration since there tend to be a lot of geometric designs created, even if they're mostly interactive. I thought this one was cool since it had sets of solid and outlined triangles intersected at seemingly random degrees. I used this concept to create triangles with random intersections which created cut-outs of various polygons inside a triangle.&lt;/p&gt;

&lt;p&gt;I also had some plywood lying around from previous projects (much more than cardboard), so I used that with a new acrylic sheet to give the kit some color.&lt;/p&gt;

&lt;p class="codepen" data-height="387" data-theme-id="0" data-default-tab="result" data-user="yuanchuan" data-slug-hash="YLyEvb" style="height: 387px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid black; margin: 1em 0; padding: 1em;" data-pen-title="Unicode triangles"&gt;
  &lt;span&gt;See the Pen &lt;a href="https://codepen.io/yuanchuan/pen/YLyEvb/"&gt;
  Unicode triangles&lt;/a&gt; by yuanchuan (&lt;a href="https://codepen.io/yuanchuan"&gt;@yuanchuan&lt;/a&gt;)
  on &lt;a href="https://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async="" src="https://static.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;h2 id="generating-the-shapes-with-grasshopper-in-rhino"&gt;Generating the shapes with Grasshopper in Rhino&lt;/h2&gt;

&lt;p&gt;My first attempt at this was to use triangulate to generate a grid of triangles and then use the first triangle's three points to calculate an inner triangle which was duplicated in a rectangular array. While this strategy did work and allowed me to keep the size relative for both triangles, it proved stressful when trying to generate notch connectors for every side of the larger triangle. (See details in the issues section below).&lt;/p&gt;

&lt;p&gt;I scrapped that idea and instead tried to approach this by creating one triangle from a polyline using trigonometry to make it perfectly equilateral. From there, I created notches with a slider to change the width corresponding to material thickness and polar arrayed the rectangular notches around the center of the triangle. I then used arrays to duplicate the triangles into a controlled grid set up to match my material size (12" x 12").&lt;/p&gt;

&lt;p&gt;This strategy worked much better for actually giving me shapes I could then manipulate and print from, but it still had a ton of issues.&lt;/p&gt;

&lt;h3 id="issues"&gt;Issues&lt;/h3&gt;

&lt;p&gt;Even as someone who thinks through problems for programming on a regular basis, there were things Grasshopper did that were highly annoying and I would’ve saved hours of my life just doing them in illustrator. I did countless hours of Googling and searching through the Grasshopper forums, like in real life as a developer but 10x worse.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/2zcjhn.jpg" alt="Confused Meme" /&gt;&lt;/p&gt;

&lt;h4 id="i-classem-em-upsidedownfacei-triangulate-is-annoying"&gt;&lt;i class="em em-upside_down_face"&gt;&lt;/i&gt; Triangulate is annoying&lt;/h4&gt;

&lt;p&gt;Using triangulate somehow made things extremely annoying. Generating notches for all the outer triangle sides required calculating the exact angle relative to X and corresponding each angle to a xy plane relative to the midpoint of each triangle edge. I actually &lt;em&gt;did&lt;/em&gt; get this to work and generate triangles in the right places, but when I baked everything, I was given about 5x the amount of notches, most on top of one another. This would not have been great to send to a laser cutter, as it would've made passes for each drawn curve. Even debugging by getting the list length of variables at different steps didn't exactly lead to figuring out why I was getting so many notches. I probably spent 2-3 hours just trying to figure this out. It still didn't work when I turned graft off and collapsed the tree, so idk. &lt;i class="em em-woman-shrugging"&gt;&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/notches-for-all.png" alt="Triangulate notches for all" /&gt;&lt;/p&gt;

&lt;h4 id="i-classem-em-cryi-random-isnt-random-at-all"&gt;&lt;i class="em em-cry"&gt;&lt;/i&gt; "Random" isn't random at all&lt;/h4&gt;

&lt;p&gt;In my optimism, I wanted to use Grasshopper to generate everything in my design, including the bisecting lines for the inner triangles. The only issue was that I wanted this to be unique for every triangle, no matter how many triangles got generated. This is where I re-learned that every "random" function in programming isn't really random; it just chooses from a seemingly random list of numbers, but on each iteration, follows the same pattern. I also ran into this issue when working on my led light strip for Physical Prototyping. The screenshot below got pretty close, but it still wasn't the best. If you look closely, you definitely see a pattern. Also, wtf was up with the very last triangle getting ALL the lines. Not bisecting at all. &lt;i class="em em-woman-gesturing-no"&gt;&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/randomize-lines.png" alt="&amp;quot;Randomizing&amp;quot; lines for inner triangle cut-outs" /&gt;&lt;/p&gt;

&lt;h4 id="i-classem-em-woman-facepalmingi-fillet-does-all-corners"&gt;&lt;i class="em em-woman-facepalming"&gt;&lt;/i&gt; Fillet does all corners&lt;/h4&gt;

&lt;p&gt;I &lt;em&gt;really&lt;/em&gt; wanted to fillet the corners where the notches connect to make a smooth and satisfying connection when assembling the kit. Using the standard fillet function ended up filleting &lt;em&gt;ALL&lt;/em&gt; the corners, which would've meant a loose connection on the very inside of the notches. No good. I turned to using the other fillet function, which fillets on only one curve and set a Boolean list to specify which ones I wanted filleted. Turns out this creates a new curve for &lt;em&gt;EVERY&lt;/em&gt; filleted edge. Also no good.&lt;/p&gt;

&lt;p&gt;I kind of just gave up on this one, though when I was in the makerspace printing, Andrew informed me that he used a triangle to trim the edges for a custom fillet. This seems like a much better approach to getting a fillet only on the outside, but doesn't still make any sense to me why you can't just modify the fillet function to do what you want. With Andrew's triangle cut-out approach, it did require setting an origin exactly at the midpoint and rotating it the correct degrees, but it worked much better. Since I was printing and spent hours in Grasshopper already, I decided to just cut fillets for the connectors in Illustrator.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/custom-filleting-issue.png" alt="Custom Filleting Issue" /&gt;&lt;/p&gt;

&lt;h3 id="grasshopper-take-two"&gt;Grasshopper take two&lt;/h3&gt;

&lt;p&gt;From experiencing all these issues, I &lt;em&gt;really&lt;/em&gt; wanted to try to solve generating most everything parametrically in Grasshopper. I think my past failures were not fully understanding when to graft/simplify/flatten trees. When I redid everything with all my new knowledge from past failures, I had a much better time.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/everything.png" alt="Triangle grid" /&gt;
&lt;em&gt;Yay, it all works much better not doing this at 1am.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id="create-a-triangular-grid"&gt;1. Create a triangular grid&lt;/h4&gt;

&lt;p&gt;First, I found the center of each triangle by separating the edges, finding the endpoints of each line, and using one side of the endpoint to calculate the center of each triangle. I set also inputs for each material thickness (I had three).&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/inputs.png" alt="Triangle grid" /&gt;&lt;/p&gt;

&lt;h4 id="scale-the-triangles-in-the-grid-to-create-inner-triangles"&gt;2. Scale the triangles in the grid to create inner triangles&lt;/h4&gt;

&lt;p&gt;I used the grid as the base geometry, and then set the center using the above calculation to scale triangles down in size, creating inner triangles.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/triangular.png" alt="Triangle grid scale" /&gt;&lt;/p&gt;

&lt;h4 id="make-notches-for-connectors"&gt;3. Make notches for connectors&lt;/h4&gt;

&lt;p&gt;Since the triangles in the grid are not in the same orientation, I divided out the triangles into ones pointed up and ones pointed down. I then used different bisectors from the Incentre function to create straight notches on all triangles first. I then polar arrayed the straight notches around the center of the triangles for the other two sides.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/make-notches.png" alt="Making notches for both up and down triangles" /&gt;&lt;/p&gt;

&lt;p&gt;To make sure each notch was created out from the midpoint, I used the construct domain function to set expressions to size the straight notches on the xy plane.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/construct-domain.png" alt="Using Construct Domain to set expressions" /&gt;&lt;/p&gt;

&lt;h4 id="creating-the-connector-piece"&gt;4. Creating the connector piece&lt;/h4&gt;

&lt;p&gt;To create the connector piece, I first created a rectangle 4x the size of the notches. Using the construct domain function again, I created inner rectangles aligned to the left and right of the triangle taking the inputs for each material size. I then used the region difference function to create the entire connector.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/connector.png" alt="Creating straight connectors" /&gt;&lt;/p&gt;

&lt;h4 id="creating-15-30-and-45-connector-pieces"&gt;5. Creating 15°, 30°, and 45° connector pieces&lt;/h4&gt;

&lt;p&gt;I create a new rectangle half the width of the connector and used that to separate it into two sides. To do this, I made sure to set the origin of rotation at the bottom center point of the connector using the Box Corners function to find each corner. I then rotated each connector by increasing amounts of 15°.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/angled-connectors.png" alt="Rotating the angled connectors" /&gt;&lt;/p&gt;

&lt;p&gt;To join the left angled side and the right non-angled side, I first separated all the sides. I then found the top right corner of the angled side and the top left corner of the non-angled side, and created a line between the two points. I then joined all three curves, using flatten trees.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/join-connectors.png" alt="Joining the angled connectors" /&gt;&lt;/p&gt;

&lt;h4 id="bisecting-the-triangles-to-create-inner-polygons"&gt;6. Bisecting the triangles to create inner polygons&lt;/h4&gt;

&lt;p&gt;I baked both the triangles into Rhino and created the bisecting lines by hand to make sure they were all truly unique for each set of triangles. I used a line and checked 'On curve' to make sure it would snap to each inner triangle. I then used trim to select which half I wanted to delete. I then joined all the (now) inner polygon curves.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/bisecting.png" alt="Inner polygons" /&gt;&lt;/p&gt;

&lt;h4 id="setting-the-shapes-up-for-printing"&gt;7. Setting the shapes up for printing&lt;/h4&gt;

&lt;p&gt;I then set the shapes to different layers to allow printing at different settings on different materials. I actually ended up combining the inner polygons and outer triangles to create two sets of shapes so that the acrylic and wood pieces would be different.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/layers.png" alt="Dividing the shapes into layers for different printing" /&gt;&lt;/p&gt;

&lt;h2 id="printing"&gt;Printing&lt;/h2&gt;

&lt;p&gt;I had set up my units in Rhino to be in inches to match everything else and checked the 1 to 1 matching on the export box, so I didn't run into any sizing issues like my classmates who were in the Mill at the same time as me. They didn't seem to have an issue once they set everything to inches as well. I actually exported everything to Illustrator so I could be damn sure it would print at the correct size.&lt;/p&gt;

&lt;p&gt;I set up a test layer with four connector pieces in different colors and then color mapped them to a range of values to find the best setting for each material. This also allowed me to test the connection between materials. I found it to be a bit loose at first and reduced the size of the notch rectangles by 0.05 inches for each side.&lt;/p&gt;

&lt;p&gt;I masked the plywood and left the protective film on the acrylic sheets to reduce the burnt haze on the wood. I probably should've masked the clear sheet since it had only a clear protector and should've masked the back of the plywood.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/triangles2.gif" alt="Laser cutting more triangles" /&gt;
&lt;em&gt;Laser cutting is still very satisfying to watch and way easier than hand sawing through this plywood&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/IMG_2442.JPG" alt="Triangles" /&gt;
&lt;em&gt;Pieces all piled up in the makerspace after printing&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/IMG_2445.JPG" alt="Triangles" /&gt;
&lt;em&gt;:D Yay, awesome colors!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment2/IMG_2438.JPG" alt="Little Burnt Notches" /&gt;
&lt;em&gt;Should've masked this sheet, oh well, they’re pretty tiny&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="settings"&gt;Settings&lt;/h3&gt;

&lt;p&gt;The final settings I used to print my materials.&lt;/p&gt;

&lt;h4 id="clear--neon-acrylic"&gt;Clear &amp;amp; Neon Acrylic&lt;/h4&gt;

&lt;p&gt;.06" Thick &amp;amp; .118" Thick&lt;/p&gt;

&lt;p&gt;Speed: 14, Power: 100, Frequency: 50&lt;/p&gt;

&lt;p&gt;I tested both acrylic sheets since their thickness varied, but found the same setting to be good for both. This setting had a very satisfying "snap out" quality on the neon acrylic, which also ensured the pieces didn't all fall below the laser cutter’s grid.&lt;/p&gt;

&lt;h4 id="plywood"&gt;Plywood&lt;/h4&gt;

&lt;p&gt;0.196" Thick&lt;/p&gt;

&lt;p&gt;Speed: 10, Power: 100, Frequency: 50&lt;/p&gt;

&lt;h2 id="future-considerations"&gt;Future Considerations&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Trimming overlapping triangle lines to reduce duplicate cuts&lt;/li&gt;
  &lt;li&gt;Masking the clear acrylic&lt;/li&gt;
  &lt;li&gt;Not spending so many damn hours in Grasshopper trying to get it to generate everything.&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>Laser Cut Kit</title>
    <link rel="alternate" href="http://blog.url.com/hcde598/2019/04/16/laser-cut-kit.html"/>
    <id>http://blog.url.com/hcde598/2019/04/16/laser-cut-kit.html</id>
    <published>2019-04-15T23:11:00-07:00</published>
    <updated>2019-04-23T10:59:34-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="house-plant--planter-construction-kit"&gt;House Plant &amp;amp; Planter Construction Kit&lt;/h1&gt;

&lt;p&gt;Want to get in on the house plant trend but kill even a snake plant? Why not laser cut one? Guaranteed never to die since it’s made out of cardboard. You’ll never run the risk of forgetting to water it!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Just don’t water it. Cardboard is not a living thing and doesn’t need water for nutrients.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://klare.io/hcde598/documentation/laser-cut-kit/planter.ai"&gt;Download the source illustrator files&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="designing-the-planter"&gt;Designing the planter&lt;/h2&gt;

&lt;p&gt;I wanted a planter shape that turned 2D cardboard into a 3D cylindrical shape since it's more of a challenge than changing 2D objects, like cardboard, into a cube with 90° angles. To start, I browsed planters on CB2 for inspiration. At first, I thought about creating a grid with angled notches to fit squares into a cylinder, like in the below image. This &lt;em&gt;may&lt;/em&gt; have worked, but seemed like it would be tricky to make solid and would've required a lot of angle calculations and physical testing. Cool concept, but not feasible for me given the time frame for this project.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/cb2-planter.png" alt="Two ombre planters with square design" /&gt;
&lt;em&gt;&lt;a href="https://www.cb2.com/pescador-ombre-planters/f19685"&gt;Pescador Ombre Planters on CB2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Instead, I turned to thinking about using vertical pieces taking a cross-section of the radius of a planter. By placing these on an angle these pieces could visually cover the shape of a planter, retain the integrity of a cylindrical planter shape, and not require lots of intricate connects thus making the structure much more solid. I designed the planter with twelve pieces to fit on 30° intervals around planter circumference.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/laser-1.jpg" alt="Vertical cross-section pieces" /&gt;&lt;/p&gt;

&lt;p&gt;To fit the vertical cross-section pieces together, I designed the planter with two circles 7" wide in diameter to place at the top and bottom of the vertical pieces. These act as the top and bottom of the planter.&lt;/p&gt;

&lt;p&gt;To achieve a more solid-looking visual effect, I aligned two notches which were 1/2 inch deep and 0.17 wide (to match the thickness of the cardboard I used) to the top and bottom of the circle. I then rotated these notches 340° and aligned the outward corner of the notch closest to the circle with the edge of the circle. I repeated this step for the remaining 10 notches, placed 30° apart to match the 12 vertical pieces.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/laser-4.gif" alt="Adding the notches for the circles" /&gt;
&lt;em&gt;Videos and gifs at 4x speed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I then wanted to make sure that all the pieces were aligned on a z-axis in anticipation of these circular pieces not being completely level by user construction only. I added 1/2 inch deep by 0.17 wide notches to the top and bottom of the vertical planter-profile pieces to align with the notches on the top and bottom circular pieces. When these two notches get locked in place together, the circular pieces should stay level.&lt;/p&gt;

&lt;h2 id="building-the-plant"&gt;Building the plant&lt;/h2&gt;

&lt;p&gt;To create something nice to sit in the planter, I turned to snake plants. These are tall and the visual effect of their leaves can roughly be achieved in a 2D plane, which is why they were chosen. I created 10 different leaf varieties to mimic the shape of snake plant leaves and increased the height of the leaves incrementally by a 1/2 inch for each leaf from 2" all the way up to 8".&lt;/p&gt;

&lt;p&gt;I then added a long "popsicle stick" at the bottom of the leaf to act as a root through the top circle and through the pot. To stabilize this further, I added a third circle and adjusted the vertical pieces to add an additional identical notch 2" below the top notch. This gives each of the leaf "roots" something to sit in like a nice bed of dirt.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/laser-5.gif" alt="Making the leaves in illustrator with paths" /&gt;&lt;/p&gt;

&lt;p&gt;I then choose one circle to act as the top of the plant and drew rectangular cut-outs in a spiral pattern to mimic natural plant growth. These were by .625" by .17" wide (the magic cardboard thickness number). These will be where the popsicle sticks part of the leaves will drop into the planter.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/illustrator-spiral.jpg" alt="Using the illustrator spiral tool as a guide for notches" /&gt;&lt;/p&gt;

&lt;h2 id="laser-cutting-everything"&gt;Laser cutting everything&lt;/h2&gt;

&lt;p&gt;I assembled four artboards sized to cardboard I had pre-sized from a large Lego box and laid out each object to fit. I set the laser cutter to 25% power 100% speed and each object to a stroke width of .001pt. This worked well enough to properly cut out everything, though there was some funky smelling carboard smoke (which you can see in the gifs).&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/laser-1.gif" alt="Cutting out the planter circles" /&gt;
&lt;em&gt;Cutting one of the artboards with the circular pieces&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I ran into an issue where the vertical pieces, even though the stroke was set to the smallest setting, still wanted to be raster cut by the laser cutter instead of vector cut. I had to re-draw this shape using one of the leaves I knew had already laser cut as vector.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/laser-2.gif" alt="Cutting out the leaves" /&gt;&lt;/p&gt;

&lt;h2 id="modifications"&gt;Modifications&lt;/h2&gt;

&lt;p&gt;I originally designed each vertical piece with only one notch and removed every third notch from the circular pieces to fit the two together (which you can see in the laser cutting gifs). While this worked to solidly piece the two types of pieces together, it did not strictly adhere to the assignment criteria. Instead, I went back and editing all the vertical pieces to have all three notches, this time half as wide and also edited the circles to have notches half as wide at every 30°. This technique still allows a solid connection between the two types while adhering to the criteria of having 12 instances of one unique part (in this case, the 12 vertical planter-profile pieces). This is reflected in the &lt;a href="http://klare.io/hcde598/documentation/laser-cut-kit/planter.ai"&gt;source illustrator file&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="assembling-the-final-plant"&gt;Assembling the final plant&lt;/h2&gt;

&lt;p&gt;To assemble the plant, first, put together the planter. Take one vertical profile piece and slide it into the slots on the three circles with the circle with rectangular cut-outs at the top. Do the same on the opposite side. Then, fill in with vertical pieces around all sides of the circles.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/laser-2.jpg" alt="Putting together the planter" /&gt;&lt;/p&gt;

&lt;p&gt;Choose your leaves. To achieve optimum plant growth, choose taller leaves for the center and smaller leaves on the outside. Place next to a real snake plant to keep it company.&lt;/p&gt;

&lt;p&gt;&lt;img src="/hcde598/images/assignment1/laser-4.jpg" alt="Top down view of the leaves" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Nameboard</title>
    <link rel="alternate" href="http://blog.url.com/hcde598/2019/04/04/nameboard.html"/>
    <id>http://blog.url.com/hcde598/2019/04/04/nameboard.html</id>
    <published>2019-04-03T20:19:00-07:00</published>
    <updated>2019-04-23T10:59:34-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;For the first assignment, I decided to build a stand for a nametag I received while attending &lt;a href="https://greenvillegrok.com/"&gt;Greenville Grok&lt;/a&gt;, an unconference for people who create things online. I attended this conference on April 5th &amp;amp; 6th and had to fly across the country to Greenville, SC. This limited the time I was able to spend actually making something and also limited the tools and materials available to me.&lt;/p&gt;

&lt;p&gt;We were given 5 1/4-inch floppy disks as our nametags. I built a stand out of legos since that's what I had available to me at my boyfriend's place. If I had been home for a significant time, I probably would've created something out of wood using my Dremel. The Chewbacca minifig is a special addition, as it has been to space (above the Karman line) on the payload of the most recent &lt;a href="https://www.blueorigin.com/new-shepard/"&gt;Blue Origin New Shepard&lt;/a&gt; mission.&lt;/p&gt;

&lt;p&gt;Since nametags were on 5 1⁄4-inch floppy disks, it made me recall the history presented to us in our first class. Like all the inventions that led us to modern fabrication with digital tools, our modern internet technologies have evolved from the storage popular in the 70s and early 80s. Some of those early digital fabrication files were probably saved on a floppy just like this. Moving forward, I think it's important to recognize the achievements of the past, what we can learn from their discoveries, and what we still have yet to learn while building new things.&lt;/p&gt;
</content>
  </entry>
</feed>
